var S=Object.defineProperty;var J=(e,t)=>{for(var s in t)S(e,s,{get:t[s],enumerable:!0})};var k=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)};var i=(e,t,s)=>(k(e,t,"read from private field"),s?s.call(e):t.get(e)),a=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},o=(e,t,s,n)=>(k(e,t,"write to private field"),n?n.call(e,s):t.set(e,s),s);var L={};J(L,{getBase:()=>l,getInfo:()=>j,getInfoURL:()=>u,getInstance:()=>y,getJSON:()=>c,getLatestVersion:()=>w,getURL:()=>I,paginate:()=>m});var N={main:"api.dandiarchive.org",staging:"api-staging.dandiarchive.org"},T=N;var w=async(e,t)=>{let s=await l(e,t);if(s){let n=s.most_recent_published_version?.version;if(n)return n;if(s.draft_version?.status==="Valid")return s.draft_version?.version}else return null},y=e=>typeof e=="string"?T[e]:T.main,I=(e,t)=>new URL(e,`https://${y(t)}/api/`),c=e=>fetch(e).then(t=>t.json()),V=(e,t)=>`https://${y(t)}/api/dandisets/${e}`,l=(e,t)=>c(V(e,t)),u=(e,t={})=>`${V(e,t.type)}/versions/${t?.version?t.version:"draft"}`,j=async(e,t={})=>{let s=t.version??await w(e,t.type);if(s)return c(u(e,{...t,version:s}))},m=async e=>{let t=[];if(e.results&&t.push(...e.results),e.next){let s=await c(e.next);t.push(...await m(s))}return t};var h,g,A,$=class{constructor(t,s,n="main"){a(this,h,void 0);a(this,g,void 0);a(this,A,t=>{Object.assign(this,t),this.asset_id=t.asset_id});s&&typeof s=="object"&&!(s instanceof String)?i(this,A).call(this,s):this.asset_id=s,o(this,h,n),o(this,g,t)}async get(t=i(this,g),s=this.asset_id,n=i(this,h)){o(this,g,t),o(this,h,n),this.asset_id=s;let r=await B(i(this,g),this.asset_id,i(this,h));return r&&Object.assign(this,r),r}};h=new WeakMap,g=new WeakMap,A=new WeakMap;var B=async(e,t,s={})=>{let n=u(e,s),r=await c(`${n}/assets/${t}/info`);return new $(e,r,s.type)};var _,f,p,b,d,x,v=class{constructor(t,s){a(this,_,{});a(this,f,{});a(this,p,{});a(this,b,!1);a(this,d,{});a(this,x,t=>{o(this,_,t),Object.assign(this,t),this.identifier=t.identifier});let n=t&&typeof t=="object"&&!(t instanceof String);n&&i(this,x).call(this,t),this.identifier=n?t.identifier:t,o(this,d,s)}async get(t=this.identifier){if(t!==this.identifier){this.identifier=t,o(this,f,{}),o(this,p,{});let s=await l(this.identifier,i(this,d).type);s&&Object.assign(this,s)}return i(this,_)}async getInfo(t=i(this,d)){return Object.keys(i(this,f)).length===0&&o(this,f,await j(this.identifier,t)),i(this,f)}async getAsset(t,s=i(this,d)){return i(this,p)[t]||(i(this,p)[t]=await B(this.identifier,t,s)),i(this,p)[t]}async getAssets(t=i(this,d)){if(!i(this,b)){let s=await M(this.identifier,t);console.log("Got assets",s),s?.forEach(n=>i(this,p)[n.asset_id]=n),o(this,b,!0)}return i(this,p)}};_=new WeakMap,f=new WeakMap,p=new WeakMap,b=new WeakMap,d=new WeakMap,x=new WeakMap;var E=(e,t={})=>`${u(e,t)}/assets`,M=async(e,t={})=>{let s=t?.version??await w(e,t.type);if(s){let n=`${E(e,{...t,version:s})}`,r=await c(n);return await Promise.all((await m(r)).map(async D=>B(e,D.asset_id,t)))}},Y=async e=>{let t=`https://${y(e.type)}/api/dandisets`,s=await c(t);return(await m(s)).map(r=>new v(r,e))},P=async(e,t)=>{let s=await l(e,t.type);return s?new v(s,t):null};var z,O,U=class{constructor({token:t,type:s="main"}){this.authorized=!1;this.init=async()=>{await this.authorize()};a(this,z,()=>{if(!this.authorized)throw new Error("API is not authorized. Please provide a valid token.")});this.get=async(t,s={})=>P(t,{...s,...this});this.create=async(t,s={},n=!1)=>{i(this,z).call(this);let r=I(`dandisets/?embargo=${n}`,this.type),D=JSON.stringify({name:t,metadata:s});return await fetch(r,{method:"POST",headers:i(this,O).call(this),body:D}).then(R=>R.json())};a(this,O,(t=this.token)=>({Authorization:`token ${t}`,accept:"application/json","Content-Type":"application/json"}));this.authorize=async(t=this.token)=>{await fetch(I("auth/token",this.type),{headers:i(this,O).call(this,t)}).catch(s=>{throw this.authorized=!1,s}),this.token=t,this.authorized=!0};this.token=t,this.type=s}};z=new WeakMap,O=new WeakMap;export{U as API,$ as Asset,v as Dandiset,P as get,Y as getAll,B as getAsset,M as getAssets,E as getAssetsUrl,L as utils};
//# sourceMappingURL=index.esm.js.map
